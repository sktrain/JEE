
package sk.train.generated;

import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "HelloWorldIf", targetNamespace = "http://train.sk/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HelloWorldIf {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sayDateasString", targetNamespace = "http://train.sk/", className = "sk.train.generated.SayDateasString")
    @ResponseWrapper(localName = "sayDateasStringResponse", targetNamespace = "http://train.sk/", className = "sk.train.generated.SayDateasStringResponse")
    public String sayDateasString();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sayHello", targetNamespace = "http://train.sk/", className = "sk.train.generated.SayHello")
    @ResponseWrapper(localName = "sayHelloResponse", targetNamespace = "http://train.sk/", className = "sk.train.generated.SayHelloResponse")
    public String sayHello(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns sk.train.generated.LocalDateTime
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "sayDate", targetNamespace = "http://train.sk/", className = "sk.train.generated.SayDate")
    @ResponseWrapper(localName = "sayDateResponse", targetNamespace = "http://train.sk/", className = "sk.train.generated.SayDateResponse")
    public LocalDateTime sayDate();

}
