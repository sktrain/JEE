package sk.train.gen;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.0.4
 * 2024-11-19T13:10:10.493+01:00
 * Generated source version: 4.0.4
 *
 */
@WebServiceClient(name = "HelloWorldService",
                  wsdlLocation = "http://localhost:8080/Muster_WS_Hello_Async/HelloWorld?wsdl",
                  targetNamespace = "http://train.sk/")
public class HelloWorldService extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://train.sk/", "HelloWorldService");
    public static final QName HelloWorldPort = new QName("http://train.sk/", "HelloWorldPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8080/Muster_WS_Hello_Async/HelloWorld?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(HelloWorldService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://localhost:8080/Muster_WS_Hello_Async/HelloWorld?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public HelloWorldService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public HelloWorldService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public HelloWorldService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public HelloWorldService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public HelloWorldService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public HelloWorldService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns HelloWorldIf
     */
    @WebEndpoint(name = "HelloWorldPort")
    public HelloWorldIf getHelloWorldPort() {
        return super.getPort(HelloWorldPort, HelloWorldIf.class);
    }

    /**
     *
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloWorldIf
     */
    @WebEndpoint(name = "HelloWorldPort")
    public HelloWorldIf getHelloWorldPort(WebServiceFeature... features) {
        return super.getPort(HelloWorldPort, HelloWorldIf.class, features);
    }

}
